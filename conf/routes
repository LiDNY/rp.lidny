GET     /favicon.ico                                    controllers.Assets.at(path="/public", file="images/favicon.ico")
GET     /robots.txt                                     controllers.Assets.at(path="/public", file="robots.txt")
GET     /assets/*file                                   controllers.Assets.versioned(path="/public", file: Asset)

GET     /                                               controllers.HomeController.home(request: Request)
GET     /lang                                           controllers.HomeController.lang(request: Request, lang: String ?= "de", returnUrl ?= "/")

GET     /newest                                         controllers.NewestController.list(request: Request, page: Integer ?= 1)

GET     /map                                            controllers.MapController.view(request: Request)
GET     /map/_markers                                   controllers.MapController.markers(request: Request)
GET     /map/_config                                    controllers.MapController.config(request: Request)

GET     /browse                                         controllers.BrowseController.browse(request: Request, page: Integer ?= 1, country: Integer = null, operator: Integer = null, vehicleClass: Integer = null)
GET     /browse/:country                                controllers.BrowseController.browse(request: Request, page: Integer ?= 1, country: Integer, operator: Integer = null, vehicleClass: Integer = null)
GET     /browse/:country/:operator                      controllers.BrowseController.browse(request: Request, page: Integer ?= 1, country: Integer, operator: Integer, vehicleClass: Integer = null)
GET     /browse/:country/:operator/:vehicleClass        controllers.BrowseController.browse(request: Request, page: Integer ?= 1, country: Integer, operator: Integer, vehicleClass: Integer)

GET     /operator/:id                                   controllers.VehicleOverviewController.operator(request: Request, id: Integer)
GET     /class/:id                                      controllers.VehicleOverviewController.vehicleClass(request: Request, id: Integer)
GET     /series                                         controllers.VehicleOverviewController.vehicleSeriesList(request: Request)
GET     /series/:id                                     controllers.VehicleOverviewController.vehicleSeries(request: Request, id: Integer)

GET     /search                                         controllers.SearchController.search(request: Request, datefrom: String ?= null, dateto: String ?= null)
POST    /search                                         controllers.SearchController.searchPost(request: Request)
GET     /search/_locations                              controllers.SearchController.locations(request: Request, country: Integer ?= null)

GET     /travelogues                                    controllers.TraveloguesController.list(request: Request, yearMonth: String = null)
GET     /travelogues/:yearMonth                         controllers.TraveloguesController.list(request: Request, yearMonth: String)
GET     /travelogue/_create                             controllers.TraveloguesController.create(request: Request)
POST    /travelogue/_create                             controllers.TraveloguesController.createPost(request: Request)
GET     /travelogue/:id                                 controllers.TraveloguesController.view(request: Request, id: Integer)
GET     /travelogue/:id/_edit                           controllers.TraveloguesController.edit(request: Request, id: Integer)
POST    /travelogue/:id/_edit                           controllers.TraveloguesController.editPost(request: Request, id: Integer)
GET     /travelogue/:id/_delete                         controllers.TraveloguesController.delete(request: Request, id: Integer)
POST    /travelogue/:id/_delete                         controllers.TraveloguesController.deletePost(request: Request, id: Integer)
GET     /travelogue/:id/_bb                             controllers.TraveloguesController.bb(request: Request, id: Integer)

GET     /upload                                         controllers.UploadController.upload(request: Request)
POST    /upload                                         controllers.UploadController.uploadPost(request: Request)

GET     /manage/series                                  controllers.ManagementController.manageSeries(request: Request)
GET     /manage/noseries                                controllers.ManagementController.manageNoSeries(request: Request)
GET     /manage/notypeprop                              controllers.ManagementController.manageNoTypeProp(request: Request)
GET     /manage/nowikidata                              controllers.ManagementController.manageNoWikidata(request: Request)
GET     /manage/keywords                                controllers.ManagementController.manageKeywords(request: Request)
GET     /manage/country/_create                         controllers.ManagementController.createOrUpdateCountry(request: Request, returnUrl : String ?= null, country: Integer = null)
POST    /manage/country/_create                         controllers.ManagementController.createOrUpdateCountryPost(request: Request, returnUrl : String ?= null, country: Integer = null)
GET     /manage/country/:country                        controllers.ManagementController.createOrUpdateCountry(request: Request, returnUrl : String ?= null, country: Integer)
POST    /manage/country/:country                        controllers.ManagementController.createOrUpdateCountryPost(request: Request, returnUrl : String ?= null, country: Integer)
GET     /manage/operator/_create                        controllers.ManagementController.createOrUpdateOperator(request: Request, returnUrl : String ?= null, operator: Integer = null)
POST    /manage/operator/_create                        controllers.ManagementController.createOrUpdateOperatorPost(request: Request, returnUrl : String ?= null, operator: Integer = null)
GET     /manage/operator/:operator                      controllers.ManagementController.createOrUpdateOperator(request: Request, returnUrl : String ?= null, operator: Integer)
POST    /manage/operator/:operator                      controllers.ManagementController.createOrUpdateOperatorPost(request: Request, returnUrl : String ?= null, operator: Integer)
GET     /manage/class/_create                           controllers.ManagementController.createOrUpdateVehicleClass(request: Request, returnUrl : String ?= null, vehicleClass: Integer = null)
POST    /manage/class/_create                           controllers.ManagementController.createOrUpdateVehicleClassPost(request: Request, returnUrl : String ?= null, vehicleClass: Integer = null)
GET     /manage/class/:vehicleClass                     controllers.ManagementController.createOrUpdateVehicleClass(request: Request, returnUrl : String ?= null, vehicleClass: Integer)
POST    /manage/class/:vehicleClass                     controllers.ManagementController.createOrUpdateVehicleClassPost(request: Request, returnUrl : String ?= null, vehicleClass: Integer)
GET     /manage/series/_create                          controllers.ManagementController.createOrUpdateVehicleSeries(request: Request, returnUrl : String ?= null, vehicleSeries: Integer = null)
POST    /manage/series/_create                          controllers.ManagementController.createOrUpdateVehicleSeriesPost(request: Request, returnUrl : String ?= null, vehicleSeries: Integer = null)
GET     /manage/series/:vehicleSeries                   controllers.ManagementController.createOrUpdateVehicleSeries(request: Request, returnUrl : String ?= null, vehicleSeries: Integer)
POST    /manage/series/:vehicleSeries                   controllers.ManagementController.createOrUpdateVehicleSeriesPost(request: Request, returnUrl : String ?= null, vehicleSeries: Integer)
GET     /manage/keywords/_create                        controllers.ManagementController.createOrUpdateKeyword(request: Request, returnUrl : String ?= null, keyword: Integer = null)
POST    /manage/keywords/_create                        controllers.ManagementController.createOrUpdateKeywordPost(request: Request, returnUrl : String ?= null, keyword: Integer = null)
GET     /manage/keywords/:keyword                       controllers.ManagementController.createOrUpdateKeyword(request: Request, returnUrl : String ?= null, keyword: Integer)
POST    /manage/keywords/:keyword                       controllers.ManagementController.createOrUpdateKeywordPost(request: Request, returnUrl : String ?= null, keyword: Integer)
GET     /manage                                         controllers.ManagementController.manage(request: Request, country: Integer = null, operator: Integer = null)
GET     /manage/:country                                controllers.ManagementController.manage(request: Request, country: Integer, operator: Integer = null)
GET     /manage/:country/:operator                      controllers.ManagementController.manage(request: Request, country: Integer, operator: Integer)

GET     /incomplete                                     controllers.IncompleteController.list(request: Request, page: Integer ?= 1)

GET     /login                                          controllers.LoginController.login(request: Request)
POST    /login                                          controllers.LoginController.loginPost(request: Request)
GET     /login/lostpw                                   controllers.LoginController.lostPassword(request: Request)
POST    /login/lostpw                                   controllers.LoginController.lostPasswordPost(request: Request)
GET     /login/linklogin                                controllers.LoginController.linkLogin(request: Request, ts: Long, email: String, sig: String)
GET     /login/newpw                                    controllers.LoginController.newPw(request: Request, ts: Long, email: String, sig: String)
GET     /logout                                         controllers.LoginController.logout(request: Request)

GET     /users                                          controllers.UsersController.list(request: Request)
GET     /users/_create                                  controllers.UsersController.create(request: Request)
POST    /users/_create                                  controllers.UsersController.createPost(request: Request)
GET     /users/:uid                                     controllers.UsersController.edit(request: Request, uid: Integer)
POST    /users/:uid                                     controllers.UsersController.editPost(request: Request, uid: Integer)
GET     /users/:uid/_delete                             controllers.UsersController.delete(request: Request, uid: Integer)
POST    /users/:uid/_delete                             controllers.UsersController.deletePost(request: Request, uid: Integer)

GET     /webcamzhb                                      controllers.WebcamController.view(request: Request)

GET     /about                                          controllers.AboutController.view(request: Request)
GET     /privacy                                        controllers.AboutController.privacy(request: Request)
GET     /status                                         controllers.AboutController.status(request: Request)

GET     /calendar                                       controllers.CalendarController.view(request: Request)
GET     /calendar/order                                 controllers.CalendarController.order(request: Request)
POST    /calendar/order                                 controllers.CalendarController.orderPost(request: Request)
GET     /calendar/orders                                controllers.CalendarController.list(request: Request)
POST    /calendar/orders                                controllers.CalendarController.listPost(request: Request)

GET     /photos/original/:id.jpg                        controllers.FilesController.original(request: Request, id: Integer)
GET     /pictures/original/:id.jpg                      controllers.FilesController.original(request: Request, id: Integer)
GET     /photos/small/:id.jpg                           controllers.FilesController.small(request: Request, id: Integer)
GET     /pictures/small/:id.jpg                         controllers.FilesController.small(request: Request, id: Integer)
GET     /photos/medium/:id.jpg                          controllers.FilesController.medium(request: Request, id: Integer)
GET     /pictures/medium/:id.jpg                        controllers.FilesController.medium(request: Request, id: Integer)
GET     /photos/large/:id.jpg                           controllers.FilesController.large(request: Request, id: Integer)
GET     /pictures/large/:id.jpg                         controllers.FilesController.large(request: Request, id: Integer)
GET     /photos/xlarge/:id.jpg                          controllers.FilesController.xlarge(request: Request, id: Integer)
GET     /pictures/xlarge/:id.jpg                        controllers.FilesController.xlarge(request: Request, id: Integer)
GET     /photos/xxlarge/:id.jpg                         controllers.FilesController.xxlarge(request: Request, id: Integer)
GET     /pictures/xxlarge/:id.jpg                       controllers.FilesController.xxlarge(request: Request, id: Integer)

GET     /picture/$id<[0-9]+>                            controllers.PhotoController.viewRedirect(request: Request, id: Integer)

GET     /$id<[0-9]+>                                    controllers.PhotoController.view(request: Request, id: Integer)
GET     /$id<[0-9]+>/_state                             controllers.PhotoController.state(request: Request, id: Integer)
POST    /$id<[0-9]+>/_rate                              controllers.PhotoController.rate(request: Request, id: Integer)
GET     /$id<[0-9]+>/_replace                           controllers.PhotoController.replace(request: Request, id: Integer, returnUrl : String ?= null)
POST    /$id<[0-9]+>/_replace                           controllers.PhotoController.replacePost(request: Request, id: Integer, returnUrl : String ?= null)
GET     /$ids<[0-9,]+>/_edit                            controllers.PhotoController.edit(request: Request, ids: String, returnUrl : String ?= null)
POST    /$ids<[0-9,]+>/_edit                            controllers.PhotoController.editPost(request: Request, ids: String, returnUrl : String ?= null)
GET     /$ids<[0-9,]+>/_edit/_suggest_locations         controllers.PhotoController.suggestLocations(request: Request, ids: String)
GET     /$ids<[0-9,]+>/_edit/_suggest_trains            controllers.PhotoController.suggestTrains(request: Request, ids: String)
GET     /$ids<[0-9,]+>/_edit/_config                    controllers.PhotoController.config(request: Request, ids: String)
GET     /$ids<[0-9,]+>/_delete                          controllers.PhotoController.delete(request: Request, ids: String, returnUrl : String ?= null)
POST    /$ids<[0-9,]+>/_delete                          controllers.PhotoController.deletePost(request: Request, ids: String, returnUrl : String ?= null)
GET     /$ids<[0-9,]+>/_autodetect                      controllers.PhotoController.autodetect(request: Request, ids: String, returnUrl : String ?= null)
POST    /$ids<[0-9,]+>/_autodetect                      controllers.PhotoController.autodetectPost(request: Request, ids: String, returnUrl : String ?= null)